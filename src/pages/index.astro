---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import { Image } from "@astrojs/image/components";
import Lion from "/lion.png";
---

<Layout title="Welcome to Astro.">
  <div
    class="absolute top-0 left-0 bg-primary z-50 w-full h-screen grid place-items-center loader-screen"
  >
    <div
      class="menu-trigger relative z-10 overflow-hidden w-20 h-20 rounded-full"
      data-component="menu-trigger"
    >
      <span
        class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-white p-2 text-md"
        ><span class="loader-number"></span>%</span
      >
      <svg
        viewBox="0 0 80 80"
        width="80"
        height="80"
        class="loader absolute top-0 left-0 fill-transparent stroke-white stroke-1"
      >
        <circle cx="40" cy="40" r="36"></circle>
      </svg>
    </div>
  </div>
  <header class="w-full bg-primary h-screen relative header">
    <div
      class="container mx-auto h-full flex flex-col relative justify-between"
    >
      <nav class="w-full relative py-8 z-20">
        <div class="flex flex-row items-center w-full justify-between">
          <a href="/" class="text-white text-2xl font-bold">MarcellusCodes</a>
          <ul
            class="flex flex-row items-center gap-10 font-semibold text-white"
          >
            <li>work.</li>
            <li>services.</li>
            <li>hire me.</li>
            <li>Menu</li>
          </ul>
        </div>
      </nav>
      <div
        class="h-full flex flex-col justify-center max-w-lg gap-4 font-light z-20 relative"
      >
        <h1 class="text-6xl text-white text-opacity-80">
          Attention to detail is our thing
        </h1>
        <p class="text-xl text-white text-opacity-80">
          Modern solutions for the web
        </p>
      </div>
    </div>
    <div class="grid grid-cols-12 absolute top-0 left-0 w-full h-full z-10">
      <div class="col-span-4 h-full"></div>
      <div class="col-span-2 h-full group relative header-work">
        <div
          class="absolute bottom-0 left-0 w-full h-[25%] header-work-child from-secondary-secondary bg-gradient-to-t opacity-25 p-6 flex flex-col items-start justify-end gap-6"
        >
          <video
            src="/work.mp4"
            loop
            autoplay
            class="w-full opacity-0 group-hover:opacity-100 duration-300 -translate-y-12 group-hover:translate-y-0"
          >
          </video>
          <p
            class="text-white font-semibold text-xl opacity-0 -translate-y-12 group-hover:translate-y-0 group-hover:opacity-100 duration-300"
          >
            Work
          </p>
          <div
            class="w-[1px] h-32 scale-y-0 group-hover:scale-y-100 duration-300 origin-top bg-white relative"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              id="Layer_1"
              data-name="Layer 1"
              viewBox="0 0 24 24"
              class="w-6 h-6 absolute -bottom-2 left-1/2 -translate-x-1/2 text-white fill-current"
            >
              <path
                d="m12,16.074c-.4,0-.777-.156-1.061-.439l-5.281-5.281.707-.707,5.281,5.281c.189.189.518.189.707,0l5.281-5.281.707.707-5.281,5.281c-.283.283-.66.439-1.061.439Z"
              ></path>
            </svg>
          </div>
        </div>
      </div>
      <div class="col-span-2 h-full group relative">
        <div
          class="absolute bottom-0 left-0 w-full h-[25%] group-hover:h-full group-hover:opacity-100 duration-300 from-secondary-secondary bg-gradient-to-t opacity-25"
        >
        </div>
      </div>
      <div class="col-span-2 h-full group relative">
        <div
          class="absolute bottom-0 left-0 w-full h-[25%] group-hover:h-full group-hover:opacity-100 duration-300 from-secondary-secondary bg-gradient-to-t opacity-25"
        >
        </div>
      </div>
      <div class="col-span-2 h-full group relative">
        <div
          class="absolute bottom-0 left-0 w-full h-[25%] group-hover:h-full group-hover:opacity-100 duration-300 from-secondary-secondary bg-gradient-to-t opacity-25"
        >
        </div>
      </div>
    </div>
  </header>
  <script>
    //gsap timeline
    /* gsap.registerPlugin(CustomEase); */
    const min = 15;
    const max = 40;
    const randomLoadingValue =
      Math.floor(Math.random() * (max - min + 1)) + min;
    const strokeDashArray = 260;

    //gsap animation
    gsap.to(".loader-number", { text: randomLoadingValue, ease: "power4.out" });
    gsap.to(".loader", {
      duration: 0.6,
      strokeDashoffset: (strokeDashArray / 100) * (100 - randomLoadingValue),
      ease: "power4.out",
      onComplete: function () {
        gsap.to(".loader-number", {
          duration: 0.6,
          text: Math.floor(100),
          ease: "power4.out",
        });
        gsap.to(".loader", {
          duration: 0.6,
          strokeDashoffset: 0,
          ease: "power4.out",
        });
        gsap.to(".loader-screen", {
          delay: 0.3,
          opacity: 0,
          duration: 0.6,
          ease: "power4.out",
          onComplete: function () {
            gsap.to(".loader-screen", { display: "none" });
          },
        });
      },
    });
    const childElement = document.querySelector(".header-work");
    const childChildElement = document.querySelector(".header-work-child");
    const parentElement = document.querySelector(".header");

    childElement.addEventListener("mouseenter", () => {
      gsap.to(childChildElement, {
        height: "100%",
        opacity: 1,
        duration: 0.6,
        ease: "power4.out",
      });
      gsap.to(parentElement, {
        backgroundColor: "#152b38",
        duration: 0.6,
        ease: "power4.out",
      });
    });

    childElement.addEventListener("mouseleave", () => {
      gsap.to(childChildElement, {
        height: "25%",
        opacity: 0.25,
        duration: 0.6,
        ease: "power4.out",
      });
      gsap.to(parentElement, {
        backgroundColor: "#0e1418",
        duration: 0.6,
        ease: "power4.out",
      });
    });
  </script>
  <style>
    .loader {
      stroke-dasharray: 260px;
      stroke-dashoffset: 260px;
    }

    .header-text {
      -webkit-text-stroke: 2px #071023;
      -webkit-text-fill-color: transparent;
    }

    .svg-container {
      position: relative;
      display: inline-block;
      overflow: hidden;
    }

    .foreground {
      position: absolute;
      top: 0;
      left: 0;
      opacity: 0;
      transition: opacity 0.3s ease-in-out;
    }

    .foreground:hover {
      opacity: 1;
    }

    .foreground path {
      stroke-dasharray: 600;
      stroke-dashoffset: 600;
      fill: none;
      stroke: white;
      stroke-width: 3;
      transition: stroke-dashoffset 1s ease-in-out;
    }

    .foreground:hover path {
      stroke-dashoffset: 0;
    }
  </style>
</Layout>
